version: 2.1

orbs:
  lpg-common-k8s: leisurepassgroup/common-k8s@0
  gh: circleci/github-cli@2.2.0
  queue: eddiewebb/queue@2.2.1

parameters:
  service-name:
    type: string
    default: dependabot-automerge

commands:
  npm-install:
    steps:
      - run:
          name: 'NPM Install'
          command: 'npm i -d' #https://jfrog.com/help/r/artifactory-how-to-troubleshoot-long-npm-install-times-with-s3-redirect-enabled/workarounds
  npm-run-build:
    steps:
      - run:
          name: 'npm run build'
          command: |
            npm run build
  restore-npm-dependencies-cache:
    parameters:
      service-name:
        type: string
    steps:
      - restore_cache:
          name: 'Restore NPM Dependencies Cache'
          keys:
            - lpg-<< parameters.service-name >>-{{ checksum "package-lock.json" }}
            - lpg-<< parameters.service-name >>-
  save-npm-dependencies-cache:
    parameters:
      service-name:
        type: string
    steps:
      - save_cache:
          name: 'Save NPM Dependencies Cache'
          key: lpg-<< parameters.service-name >>-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm/_cacache
            - node_modules
            - .next/cache

jobs:
  Build:
    executor: lpg-common-k8s/node-16-pact
    steps:
      - checkout
      - lpg-common-k8s/setup-npm-config
      - restore-npm-dependencies-cache:
          service-name: << pipeline.parameters.service-name >>
      - npm-install
      - npm-run-build
      - save-npm-dependencies-cache:
          service-name: << pipeline.parameters.service-name >>

  Auto-merge Dependabot PR:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - queue/until_front_of_line:
          only-on-branch: /^dependabot.*/
          time: '10'
      - gh/setup # Set up GitHub CLI
      - run:
          name: Check PR Mergeable and MergeStateStatus
          command: |
            mergeable_status=$(gh pr view --json mergeable | jq -r '.mergeable')
            merge_state_status=$(gh pr view --json mergeStateStatus | jq -r '.mergeStateStatus')
            if [ "$mergeable_status" != "MERGEABLE" ] || [ "$merge_state_status" = "BEHIND" ]; then
              echo "PR has conflicts or is out of date with the base branch! Aborting job."
              if [ "$merge_state_status" = "BEHIND" ]; then
                echo "Rebasing the PR branch with the base branch."
                git rebase main
                git push -f
              fi
              circleci step halt
            fi
          when: on_fail
      - run:
          name: Merge PR
          command: |
            gh pr merge --admin --delete-branch --rebase


workflows:
  version: 2
  My workflow:
    jobs:
      - Build
      - Auto-merge Dependabot PR:
          requires:
            - Build
          context:
            - GITHUB_ACCESS
          filters:
            branches:
              only: 
                - /^dependabot.*/
    # triggers:
      # - schedule:
          # cron: "0 9 * * 1-5"
          # filters:
            # branches:
              # only:
                # - /^dependabot.*/
